apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: ingress-list-of-ingresses
  labels:
    app.kubernetes.io/component: monitoring
spec:
  json: >
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 58,
      "links": [
        {
          "asDropdown": false,
          "icon": "external link",
          "includeVars": false,
          "keepTime": false,
          "tags": [
            "ingress"
          ],
          "targetBlank": false,
          "title": "",
          "tooltip": "",
          "type": "dashboards",
          "url": ""
        }
      ],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Hostname"
                },
                "properties": [
                  {
                    "id": "custom.minWidth",
                    "value": 600
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Namespace"
                },
                "properties": [
                  {
                    "id": "custom.minWidth",
                    "value": 200
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Hostname"
                },
                "properties": [
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "Open ${__data.fields.Hostname}",
                        "url": "https://${__data.fields.Hostname}"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "Namespace"
              }
            ]
          },
          "pluginVersion": "9.0.7",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "exemplar": false,
              "expr": "group (\r\n  kube_ingress_labels{cluster=\"$cluster\", namespace=~\"$namespace\"}\r\n)\r\nby (ingress, namespace, label_app_kubernetes_io_part_of)\r\n*\r\non (ingress, namespace)\r\ngroup_right(label_app_kubernetes_io_part_of)\r\n  (\r\n    group (\r\n      kube_ingress_path{cluster=\"$cluster\", namespace=~\"$namespace\"}\r\n    )\r\n    by (host, ingress, namespace)\r\n  )",
              "format": "table",
              "hide": false,
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "List of Ingresses",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true,
                  "Value": true,
                  "Value #A": true
                },
                "indexByName": {
                  "Time": 0,
                  "Value": 5,
                  "host": 3,
                  "ingress": 2,
                  "namespace": 1,
                  "path": 4
                },
                "renameByName": {
                  "Time": "",
                  "Value #A": "",
                  "exported_namespace": "Namespace",
                  "host": "Hostname",
                  "ingress": "Ingress",
                  "label_app_kubernetes_io_part_of": "Application Name",
                  "namespace": "Namespace",
                  "path": "Path"
                }
              }
            }
          ],
          "type": "table"
        }
      ],
      "schemaVersion": 36,
      "style": "dark",
      "tags": [
        "k8s",
        "ingress"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "Platform Monitoring Promxy",
              "value": "Platform Monitoring Promxy"
            },
            "hide": 0,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "datasource",
            "options": [],
            "query": "prometheus",
            "queryValue": "",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "current": {
              "selected": true,
              "text": "left",
              "value": "left"
            },
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "definition": "label_values(kube_ingress_info, cluster)",
            "hide": 0,
            "includeAll": false,
            "multi": false,
            "name": "cluster",
            "options": [],
            "query": {
              "query": "label_values(kube_ingress_info, cluster)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "type": "query"
          },
          {
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": {
              "type": "prometheus",
              "uid": "${datasource}"
            },
            "definition": "label_values(kube_ingress_info{cluster=\"$cluster\"}, namespace)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "label_values(kube_ingress_info{cluster=\"$cluster\"}, namespace)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "type": "query"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Ingress / List of Ingresses",
      "uid": "{% printf `%.40s` (printf `%s-%s` .Release.Namespace (index .DashboardsUIDs `ingress-list-of-ingresses`) ) %}",
      "version": 1,
      "weekStart": ""
    }