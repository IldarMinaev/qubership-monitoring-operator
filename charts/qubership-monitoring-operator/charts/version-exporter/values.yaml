# Default values for version-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Allow to enable or disable deploy version-exporter.
# Type: boolean
# Mandatory: no
# Default: false
#
install: false

## A name of a microservice to deploy with.
# This name will be used as name of the microservice deployment and in labels.
name: version-exporter

# Type: integer
# Mandatory: no
# Default: 9100
#
containerPort: 9100

# A docker image to use for version-exporter deployment.
# Type: string
# Mandatory: yes
#
# image: ghcr.io/netcracker/version-exporter:main

# Image pull policy to use for version-exporter deployment
imagePullPolicy: IfNotPresent

## Number of created pods.
# Type: integer
# Mandatory: no
# Default: 1
#
replicas: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "version-exporter"
  # Annotations to add to the service account
  annotations: {}
  # Annotations to add to the service account
  labels: {}

## The resources describe compute resource requests and limits for single Pod.
## Ref: https://kubernetes.io/docs/user-guide/compute-resources/
# Type: object
# Mandatory: no
resources: {}
#  limits:
#    cpu: 500m
#    memory: 512Mi
#  requests:
#    cpu: 200m
#    memory: 256Mi

# Security Context for a container.
# Type: object
# Mandatory: no
#
containerSecurityContext: {}

# SecurityContext holds pod-level security attributes.
# The parameters are required if a Pod Security Policy is enabled
#  for Kubernetes cluster and required if a Security Context Constraints is enabled
# for Openshift cluster.
#
# Mandatory: no
securityContext: {}
  # The UID to run the entrypoint of the container process.
  # Defaults to user specified in image metadata if unspecified.
  #
  # Mandatory: no
  # runAsUser: 2000

  # A special supplemental group that applies to all containers in a pod.
  # Some volume types allow the Kubelet to change the ownership of that volume
  # to be owned by the pod:
  #   1. The owning GID will be the FSGroup
  #   2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
  #   3. The permission bits are OR'd with rw-rw----
  # If unset, the Kubelet will not modify the ownership and permissions of any volume.
  #
  # Mandatory: no
  # fsGroup: 2000

# Additional arguments for version-exporter container.
# Type: list[string]
# Mandatory: no
# Default: []
#
extraArgs: []
#  - "--web.listen-address=:9100"
#  - "--web.telemetry-path=/metrics"
#  - "--web.max-requests=40"

## A name of a microservice secret to deploy with.
# This name will be used as name of the microservice secret deployment.
secretName: version-exporter-secret

# Allows set extra system environment variables for Version-exporter into the Secret.
# Type: object
# Mandatory: no
# Default: {}
#
extraVarsSecret: {}
  # pgUsername:
  # pgPassword:
  # httpRequest1Username:
  # httpRequest1Password:
  # httpRequest2Token:

# Service configuration for version-exporter
# Type: object
# Mandatory: no
#
service:
  # Type of version-exporter service
  # Type: string
  # Mandatory: no
  # Default: ClusterIP
  #
  type: ClusterIP

  # Port of version-exporter which use in service
  # Type: int
  # Mandatory: no
  # Default: 9100
  #
  port: 9100

  # Port name of version-exporter which use in service
  # Type: string
  # Mandatory: no
  # Default: http
  #
  portName: http

  # Annotations set which will create in service
  # Type: map[string]string
  # Mandatory: no
  # Default: {}
  #
  annotations: {}

  # Labels set which will create in service
  # Type: map[string]string
  # Mandatory: no
  # Default: {}
  #
  labels: {}

serviceMonitor:
  # If true, a ServiceMonitor is created for a `version-exporter`.
  # Type: boolean
  # Mandatory: no
  # Default: true
  #
  enabled: true

  # Scraping interval for Prometheus.
  # Type: string
  # Mandatory: no
  # Default: 5m
  #
  interval: 5m

  # Set path to version-exporter telemtery-path
  telemetryPath: /metrics

  # Allow change metrics scrape timeout
  # Type: string
  # Mandatory: no
  #
  # Please note that scrapeTimeout must be less the interval
  scrapeTimeout: 30s

# Allows creating Grafana dashboard for version-exporter
# Type: boolean
# Mandatory: no
# Default: true
#
grafanaDashboard: true

# Additional Exporter Config.
exporterConfig:
  configmap_collector:
    defaults:
      description: Metric shows version collected from configmaps
      metricName: configmap_collected_versions
      namespaces: []
      resourceLabels: {}
      type: configmap
      labels:
        - name: application_name
          keyRegexp: ^([^\.]+)\.[^\.]+\.[^\.]+
        - name: date
          keyRegexp: ^[^\.]+\.([^\.]+)\.[^\.]+
        - name: username
          keyRegexp: ^[^\.]+\.[^\.]+\.([^\.]+)
        - name: application_version
          valueRegexp: .*
    resources:
      - name: version
#    postgres_collector:
#      connections:
#        - host: postgres-service.svc
#          port: 5432
#          credentials:
#       ...
#    http_collector:
#      connections:
#        - url:
#        ...
#    configmap_collector:
#      defaults:
#        ...
#      resources:
#        - name:
#          ...
#        ...

## Tolerations allow the pods to schedule onto nodes with matching taints.
# Type: object
# Mandatory: no
#
tolerations: []

## Allow define which Nodes the Pods are scheduled on.
# Type: map[string]
# Mandatory: no
# Default: not set
#
nodeSelector: {}

# If specified, the pod's scheduling constraints
# More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#affinity-v1-core
# Type: object
# Mandatory: no
# Default: not set
#
affinity: {}

annotations: {}

labels: {}

# PriorityClassName assigned to the Pods to prevent them from evicting.
# Type: string
# priorityClassName: "priorityClassName"
