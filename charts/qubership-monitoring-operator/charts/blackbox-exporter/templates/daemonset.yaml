{{- if and .Values.install .Values.asDaemonSet }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.name }}
    app.kubernetes.io/instance: {{ cat .Values.name "-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
    app.kubernetes.io/component: blackbox-exporter
    app.kubernetes.io/part-of: monitoring
    {{- $image := include "blackboxExporter.image" . }}
    app.kubernetes.io/version: {{ splitList ":" $image | last }}
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        app.kubernetes.io/name: {{ .Values.name }}
        app.kubernetes.io/instance: {{ cat .Values.name "-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
        app.kubernetes.io/component: blackbox-exporter
        app.kubernetes.io/part-of: monitoring
        app.kubernetes.io/version: {{ splitList ":" $image | last }}
        app.kubernetes.io/managed-by: Helm
        {{- if .Values.labels }}
        {{- toYaml .Values.labels | nindent 8 }}
        {{- end }}
      {{- if .Values.annotations }}
      annotations:
        {{- toYaml .Values.annotations | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.name }}
      securityContext:
        {{ include "blackboxExporter.securityContext" . }}
      tolerations:
      {{- if .Values.tolerations }}
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- else }}
        - operator: Exists
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      containers:
        - name: blackbox-exporter
          image: {{ template "blackboxExporter.image" . }}
          {{- if .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- end }}
          args:
            - "--config.file=/config/blackbox.yaml"
          {{- if .Values.extraArgs }}
            {{ toYaml .Values.extraArgs | nindent 12 }}
          {{- end }}
          resources:
            {{ include "blackboxExporter.resources" $ }}
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: http
          volumeMounts:
            - mountPath: /config
              name: config
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
      volumes:
      - name: config
        {{- if .Values.secretConfig }}
        secret:
          secretName: {{ .Values.name }}
        {{- else if .Values.configExistingSecretName }}
        secret:
          secretName: {{ .Values.configExistingSecretName }}
        {{- else }}
        configMap:
          name: {{ .Values.name }}
        {{- end }}
{{- end }}