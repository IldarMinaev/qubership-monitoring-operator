{{- if and .Values.install .Values.global.privilegedRights }}
{{- with .Values }}
{{- if or (and .certsInFiles .certsInFiles.enabled) (and .certsInKubeconfig .certsInKubeconfig.enabled) (and .certsInSecrets .certsInSecrets.enabled) }}
apiVersion: {{ template "rbac.apiVersion" $ }}
kind: ClusterRole
metadata:
  name: {{ template "certExporter.rbac.fullname" $ }}
  labels:
    app.kubernetes.io/name: {{ template "certExporter.rbac.fullname" $ }}
    app.kubernetes.io/component: cert-exporter
    app.kubernetes.io/part-of: monitoring
    app.kubernetes.io/instance: {{ template "certExporter.instance" $ }}
    app.kubernetes.io/version: {{ template "certExporter.version" $ }}
rules:
  {{- if or (and .certsInFiles .certsInFiles.enabled) (and .certsInKubeconfig .certsInKubeconfig.enabled) }}
  {{- if $.Capabilities.APIVersions.Has "security.openshift.io/v1/SecurityContextConstraints" }}
  - apiGroups:
      - 'security.openshift.io'
    resources:
      - 'securitycontextconstraints'
    resourceNames:
      - {{ template "certExporter.rbac.fullname" $ }}
    verbs:
      - 'use'
    {{- end }}
  {{- if $.Capabilities.APIVersions.Has "policy/v1beta1/PodSecurityPolicy" }}
  - apiGroups:
      - 'policy'
    resources:
      - 'podsecuritypolicies'
    resourceNames:
      - {{ template "certExporter.rbac.fullname" $ }}
    verbs:
      - 'use'
    {{- end }}
  {{- end }}
  {{- if and .certsInSecrets .certsInSecrets.enabled }}
  - apiGroups:
      - ''
    resources:
      - 'secrets'
    verbs:
      - 'get'
      - 'list'
  {{- end }}
{{- end }}
{{- end }}
{{- end }}