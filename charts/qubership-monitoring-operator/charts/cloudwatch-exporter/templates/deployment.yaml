{{- if .Values.install }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.name }}
    app.kubernetes.io/component: cloudwatch-exporter
    app.kubernetes.io/part-of: monitoring
    app.kubernetes.io/instance: {{ template "cloudwatch-exporter.instance" . }}
    app.kubernetes.io/version: {{ template "cloudwatch-exporter.version" . }}
    {{- if .Values.labels }}
      {{ toYaml .Values.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        app.kubernetes.io/name: {{ .Values.name }}
        app.kubernetes.io/component: cloudwatch-exporter
        app.kubernetes.io/part-of: monitoring
        app.kubernetes.io/instance: {{ template "cloudwatch-exporter.instance" . }}
        app.kubernetes.io/version: {{ template "cloudwatch-exporter.version" . }}
        app.kubernetes.io/managed-by: Helm
        {{- if .Values.labels }}
          {{ toYaml .Values.labels | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ .Files.Get "templates/cloudwatch-exporter/configmap.yaml" | sha256sum }}
        checksum/secrets: {{ .Files.Get "templates/cloudwatch-exporter/secrets.yaml" | sha256sum }}
        {{- if .Values.annotations }}
          {{ toYaml .Values.annotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      containers:
        - name: {{ .Values.name }}
          {{- if .Values.aws.secret.name }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: access_key
                  name: {{ .Values.aws.secret.name }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: secret_key
                  name: {{ .Values.aws.secret.name }}
            {{- if .Values.aws.secret.includesSessionToken }}
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  key: security_token
                  name: {{ .Values.aws.secret.name }}
            {{- end }}
          {{- else if and .Values.aws.aws_secret_access_key .Values.aws.aws_access_key_id }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: aws_access_key_id
                  name: {{ .Values.name }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: aws_secret_access_key
                  name:  {{ .Values.name }}
          {{- end }}
          image: {{ template "cloudwatch-exporter.image" . }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if .Values.command }}
          command: {{ toYaml .Values.command | nindent 12 -}}
          {{- end }}
          ports:
            - name: container-port
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: container-port
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: container-port
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{ include "cloudwatchExporter.resources" $ }}
          volumeMounts:
            - name: vol-cloudwatch-exporter
              mountPath: /config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{ include "cloudwatch-exporter.securityContext" . }}
      {{- if .Values.serviceAccount.install }}
      serviceAccount: {{ .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ .Values.name }}
        name: vol-cloudwatch-exporter
{{- end }}