{{- if .Values.install }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app.kubernetes.io/name: {{ template "cloudEventsExporter.fullname" . }}
    app.kubernetes.io/component: cloud-events-exporter
    app.kubernetes.io/part-of: monitoring
    app.kubernetes.io/instance: {{ template "cloudEventsExporter.instance" . }}
    app.kubernetes.io/version: {{ template "cloudEventsExporter.version" . }}
    {{- if .Values.labels }}
      {{ toYaml .Values.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "cloudEventsExporter.fullname" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "cloudEventsExporter.fullname" . }}
        app.kubernetes.io/component: cloud-events-exporter
        app.kubernetes.io/part-of: monitoring
        app.kubernetes.io/instance: {{ template "cloudEventsExporter.instance" . }}
        app.kubernetes.io/version: {{ template "cloudEventsExporter.version" . }}
        app.kubernetes.io/managed-by: Helm
        {{- if .Values.labels }}
        {{ toYaml .Values.labels | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.annotations }}
        {{ toYaml .Values.annotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      serviceAccountName: {{ .Values.name }}
      containers:
        - name: {{ .Values.name }}
          imagePullPolicy: IfNotPresent
          image: {{ template "cloudEventsExporter.image" . }}
          command: ["/events-reader/eventsreader"]
          args:
            - "-output=metrics"
            - "-filtersPath=/filtering/filtering.yaml"
            {{- range .Values.namespaces }}
            - {{ printf `-namespace=%s` . | quote }}
            {{- end }}
            - {{ printf `-metricsPort=%v` .Values.port | quote }}
          {{- if .Values.extraArgs }}
          {{ toYaml .Values.extraArgs | nindent 12 }}
          {{- end }}
          env:
          {{- range $key, $value := .Values.extraEnvs }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
          {{- end }}
          ports:
            - name: health
              containerPort: 8080
            - name: metrics
              containerPort: {{ .Values.port }}
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            {{ include "cloudEventsExporter.resources" $ }}
          volumeMounts:
            - name: cloud-events-filter
              mountPath: /filtering
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{ include "cloudEventsExporter.securityContext" . }}
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ .Values.name }}
          name: cloud-events-filter
{{- end }}