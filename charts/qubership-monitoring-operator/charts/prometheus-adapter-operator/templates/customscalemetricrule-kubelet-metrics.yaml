{{- if .Values.install }}
apiVersion: monitoring.qubership.org/v1alpha1
kind: CustomScaleMetricRule
metadata:
  name: kubelet-custom-metric-rule
  labels:
    app.kubernetes.io/name: kubelet-custom-metric-rule
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring
    app.kubernetes.io/instance: {{ template "prometheusAdapter.instance" . }}
    app.kubernetes.io/version: {{ template "prometheusAdapter.version" . }}
spec:
  rules:
    # Container/Pod CPU usage metrics
    - seriesQuery: 'container_cpu_usage_seconds_total{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources:
        overrides:
          namespace:
            resource: "namespace"
          pod:
            resource: "pod"
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!="POD"}[5m])) by (<<.GroupBy>>)
    # Container/Pod Memory usage metrics
    - seriesQuery: 'container_memory_working_set_bytes{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources:
        overrides:
          namespace:
            resource: "namespace"
          pod:
            resource: "pod"
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!="POD|"}) by (<<.GroupBy>>)
    # Container/Pod uptime metrics
    - seriesQuery: 'container_start_time_seconds{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources:
        overrides:
          namespace:
            resource: "namespace"
          pod:
            resource: "pod"
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!~"POD|"}[5m])) by (<<.GroupBy>>)
    # Node CPU and Memory usage metrics
    - seriesQuery: 'node_cpu_usage_seconds_total{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources: {}
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!~"POD|"}[5m])) by (<<.GroupBy>>)
    # Node CPU and Memory usage metrics
    - seriesQuery: 'node_memory_working_set_bytes{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources: {}
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!~"POD|"}) by (<<.GroupBy>>)
{{- end }}
