# Default values for prometheus-adapter-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Allow to disable deploy prometheus-adapter-operator.
# Type: boolean
# Mandatory: no
# Default: false
#
install: false

# Provide a name in place of prometheus-adapter-operator for labels.
# Type: string
# Mandatory: no
# Default: prometheus-adapter-operator
#
name: prometheus-adapter-operator

# A docker image to use for prometheus-adapter deployment
# Type: string
# Mandatory: yes
#
# image: "k8s-prometheus-adapter-amd64:v0.6.0"

# Role for prometheus-adapter-operator to use.
# Ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/
# Type: object
# Mandatory: no
#
clusterRole:
  # Allow to disable create Role during deploy
  install: true
  name: prometheus-adapter-operator

# RoleBinding for prometheus-adapter-operator to use.
# Ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/
# Type: object
# Mandatory: no
#
clusterRoleBinding:
  # Allow to disable create RoleBinding during deploy
  install: true
  name: prometheus-adapter-operator

# This is the interval at which to update the cache of available metrics from Prometheus.
#  Since the adapter only lists metrics during discovery that exist between the current time
#  and the last discovery query, your relist interval should be equal to or larger than your Prometheus scrape interval,
#  otherwise your metrics will occasionally disappear from the adapter.
# Type: string
# Mandatory: no
metricsRelistInterval: 1m

# Enable adapter for `metrics.k8s.io`
# Type: boolean
# Mandatory: no
#
enableResourceMetrics: false

# Config for resourceMetrics will be added in prometheus-adapter-resource-rules ConfigMap
#
# Example:
#  resourceRules:
#    cpu:
#      containerLabel: container
#      containerQuery: |
#        sum by (<<.GroupBy>>) (irate (container_cpu_usage_seconds_total{<<.LabelMatchers>>,container!="",pod!=""}[4m]))
#      nodeQuery: |
#        sum by (<<.GroupBy>>) (irate(node_cpu_seconds_total{<<.LabelMatchers>>}[4m]))
#      resources:
#        overrides:
#          namespace:
#            resource: namespace
#          node:
#            resource: node
#          pod:
#            resource: pod
#    memory:
#      containerLabel: container
#      containerQuery: |
#        sum by (<<.GroupBy>>) (container_memory_working_set_bytes{<<.LabelMatchers>>,container!="",pod!=""})
#      nodeQuery: |
#        sum by (<<.GroupBy>>) (node_memory_working_set_bytes{<<.LabelMatchers>>})
#      resources:
#        overrides:
#          node:
#            resource: node
#          namespace:
#            resource: namespace
#          pod:
#            resource: pod
#    window: 5m
# configResourceMetrics: {}

# Enable adapter for `custom.metrics.k8s.io`
# Type: boolean
# Mandatory: no
#
enableCustomMetrics: true

# Enable/disable creating APIServices
#
APIService:
  resourceMetrics: false
  customMetrics: true

# This is the URL used to connect to Prometheus. It will eventually contain query parameters
#  to configure the connection.
# Type: string
# Mandatory: no
#
prometheusUrl: ""

# Parameter to specify label selector for CustomScaleMetricRule custom resources.
# Mandatory: no
#
customScaleMetricRulesSelector: []

# Replicas set the expected replicas of the prometheus-adapter.
# The controller will eventually make the size of the running replicas equal to the expected size.
#
replicas: 1

# SecurityContext holds pod-level security attributes.
# The parameters are required if a Pod Security Policy is enabled
# for Kubernetes cluster and required if a Security Context Constraints is enabled
# for Openshift cluster.
#
# Mandatory: no
securityContext: {}
  # The UID to run the entrypoint of the container process.
  # Defaults to user specified in image metadata if unspecified.
  #
  # Mandatory: no
  # runAsUser: 2000

  # A special supplemental group that applies to all containers in a pod.
  # Some volume types allow the Kubelet to change the ownership of that volume
  # to be owned by the pod:
  #   1. The owning GID will be the FSGroup
  #   2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
  #   3. The permission bits are OR'd with rw-rw----
  # If unset, the Kubelet will not modify the ownership and permissions of any volume.
  #
  # Mandatory: no
  # fsGroup: 2000

# The resources describes the compute resource requests and limits for single Pods.
# Ref: https://kubernetes.io/docs/user-guide/compute-resources/
# Type: object
# Mandatory: no
#
resources: {}
#  limits:
#    cpu: 50m
#    memory: 100Mi
#  requests:
#    cpu: 20m
#    memory: 20Mi

# Annotations is an unstructured key value map stored
# with a resource that may be set by external tools to store and retrieve arbitrary metadata.
# They are not queryable and should be preserved when modifying objects.
# More info: https://kubernetes.io/docs/user-guide/annotations
# Type: map[string]string
# Mandatory: no
# Default: not set
#
annotations: {}
#  annotation-key: annotation-value

# Map of string keys and values that can be used to organize and categorize (scope and select) objects.
# May match selectors of replication controllers and services.
# More info: https://kubernetes.io/docs/user-guide/labels
# Type: map[string]string
# Mandatory: no
# Default: not set
#
labels: {}
#  label-key: label-value

# Allow define which Nodes the Pods are scheduled on.
# Type: map[string]
# Mandatory: no
# Default: not set
#
nodeSelector: {}

# If specified, the pod's scheduling constraints
# More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#affinity-v1-core
# Type: object
# Mandatory: no
# Default: set
#
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - prometheus-adapter
        topologyKey: kubernetes.io/hostname

# Tolerations allow the pods to schedule onto nodes with matching taints.
# More info: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration
# Type: object
# Mandatory: no
# Default: not set
#
tolerations: []
# - key: key-value
#   value: value
#   operator: Equal
#   effect: NoSchedule

auth: {}
#  basicAuth:
#    createSecret:
#      username: prometheus
#      password: prometheus
#    username:
#      name: secret-name
#      key: username
#    password:
#      name: secret-name
#      key: password

# PriorityClassName assigned to the Pods to prevent them from evicting.
# Type: string
# priorityClassName: "priorityClassName"

operator:
  # A docker image to use for prometheus-adapter-operator deployment
  # Type: string
  # Mandatory: yes
  #
  # image: "product/prod.platform.system.monitoring_k8s-scaling_prometheus-adapter-operator:latest"

  # SecurityContext holds pod-level security attributes.
  # The parameters are required if a Pod Security Policy is enabled
  #  for Kubernetes cluster and required if a Security Context Constraints is enabled
  # for Openshift cluster.
  #
  # Mandatory: no
  securityContext: {}
    # The UID to run the entrypoint of the container process.
    # Defaults to user specified in image metadata if unspecified.
    #
    # Mandatory: no
    # runAsUser: 2000

    # A special supplemental group that applies to all containers in a pod.
    # Some volume types allow the Kubelet to change the ownership of that volume
    # to be owned by the pod:
    #   1. The owning GID will be the FSGroup
    #   2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
    #   3. The permission bits are OR'd with rw-rw----
    # If unset, the Kubelet will not modify the ownership and permissions of any volume.
    #
    # Mandatory: no
    # fsGroup: 2000

  # The resources describes the compute resource requests and limits for single Pods.
  # Ref: https://kubernetes.io/docs/user-guide/compute-resources/
  # Type: object
  # Mandatory: no
  #
  resources: {}
  #  limits:
  #    cpu: 200m
  #    memory: 384Mi
  #  requests:
  #    cpu: 100m
  #    memory: 256Mi

  # Allow define which Nodes the Pods are scheduled on.
  # Type: map[string]
  # Mandatory: no
  # Default: not set
  #
  nodeSelector: {}

  # Annotations is an unstructured key value map stored
  # with a resource that may be set by external tools to store and retrieve arbitrary metadata.
  # They are not queryable and should be preserved when modifying objects.
  # More info: https://kubernetes.io/docs/user-guide/annotations
  # Type: map[string]string
  # Mandatory: no
  # Default: not set
  #
  annotations: {}
  #  annotation-key: annotation-value

  # Map of string keys and values that can be used to organize and categorize (scope and select) objects.
  # May match selectors of replication controllers and services.
  # More info: https://kubernetes.io/docs/user-guide/labels
  # Type: map[string]string
  # Mandatory: no
  # Default: not set
  #
  labels: {}
  #  label-key: label-value
    # Settings for TLS

  # If specified, the pod's scheduling constraints
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#affinity-v1-core
  # Type: object
  # Mandatory: no
  # Default: set
  #
  affinity: {}
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - labelSelector:
  #         matchExpressions:
  #           - key: app.kubernetes.io/name
  #             operator: In
  #             values:
  #               - prometheus-adapter
  #       topologyKey: kubernetes.io/hostname

  # Tolerations allow the pods to schedule onto nodes with matching taints.
  # More info: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration
  # Type: object
  # Mandatory: no
  # Default: not set
  #
  tolerations: []
  # - key: key-value
  #   value: value
  #   operator: Equal
  #   effect: NoSchedule

  # PriorityClassName assigned to the Pods to prevent them from evicting.
  # Type: string
  # priorityClassName: "priorityClassName"

  # Enable TLS for prometheus adapter operator
  # Type: boolean
  # Mandatory: no
  # Default: false
  #
  tlsEnabled: false

  # When tlsEnabled is set to true, following section must be configured.
  #
  tlsConfig:
    #   caSecret:
    #     name: client-ssl-certificate
    #     key: trusted-ca.crt
    #   certSecret:
    #     name: client--ssl-certificate
    #     key: client-cert.crt
    #   keySecret:
    #     name: client-ssl-certificate
    #     key: client-key.key
    
    # TLS configuration from existing secret
    # If specified, all subsequent parameters in tls section are ignored.
    #
    # existingSecret: ""

    # Use generateCerts section if you want cert-manager to generate secret.
    # Will be ignored if existingSecret is already specified.
    generateCerts:
      enabled: true
      duration: 365
      renewBefore: 15
      clusterIssuerName: ""
      secretName: ""

    # Use createSecret section to create secret with already known content of TLS certificates.
    # Do not use createSecret if you use generateCerts
    # Will be ignored if existingSecret is already specified.
    # createSecret:
    #   secretName: ""
    #   ca: ""
    #   key: ""
    #   cert: ""
