{{- if .Values.install }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.name }}
    app.kubernetes.io/instance: {{ cat .Values.name "-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
    app.kubernetes.io/component: promitor-agent-resource-discovery
    app.kubernetes.io/part-of: monitoring
    {{- $image := include "promitor.agentResourceDiscovery.image" . }}
    app.kubernetes.io/version: {{ splitList ":" $image | last }}
    {{- if .Values.labels }}
    {{ toYaml .Values.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ default 1 .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        app.kubernetes.io/name: {{ .Values.name }}
        app.kubernetes.io/instance: {{ cat .Values.name "-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
        app.kubernetes.io/component: promitor-agent-resource-discovery
        app.kubernetes.io/part-of: monitoring
        app.kubernetes.io/version: {{ splitList ":" $image | last }}
        app.kubernetes.io/managed-by: Helm
        {{- if .Values.labels }}
          {{ toYaml .Values.labels | nindent 8 }}
        {{- end }}
      {{- if empty .Values.azureAuthentication.identity.binding | not }}
        aadpodidbinding: {{ .Values.azureAuthentication.identity.binding }}
      {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.secrets.createSecret }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.annotations }}
        {{- toYaml .Values.annotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if and .Values.serviceAccount.install .Values.serviceAccount.automountServiceAccountToken }}
      automountServiceAccountToken: true
      {{- end }}
      securityContext:
        {{ include "promitor.agentResourceDiscovery.securityContext" . }}
      {{- if .Values.serviceAccount.install }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 6 }}
      {{- end }}
      containers:
        - name: {{ .Values.name }}
          image: {{ template "promitor.agentResourceDiscovery.image" . }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
  {{- if or (or .Values.azureAuthentication.identity.key .Values.azureAuthentication.appKey (eq .Values.secrets.createSecret false)) }}
          env:
  {{- if or .Values.azureAuthentication.identity.key .Values.azureAuthentication.appKey (eq .Values.secrets.createSecret false) }}
          - name: PROMITOR_AUTH_APPKEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secrets.secretName }}
                key: {{ .Values.secrets.appKeySecret }}
        {{- end }}
        {{- end }}
          resources:
            {{ include "promitor.agentResourceDiscovery.resources" $ }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: config
            mountPath: /config/
          {{- if and .Values.containerSecurityContext.enabled .Values.containerSecurityContext.readOnlyRootFilesystem }}
          - name: tmp
            mountPath: /tmp/
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10 }}
          {{- end }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health?includeDependencies=false
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health?includeDependencies=false
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ .Values.name }}
        {{- if and .Values.containerSecurityContext.enabled .Values.containerSecurityContext.readOnlyRootFilesystem }}
        - emptyDir: {}
          name: tmp
        {{- end }}
        {{- if .Values.extraVolumes }}
          {{ toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
{{- end }}
