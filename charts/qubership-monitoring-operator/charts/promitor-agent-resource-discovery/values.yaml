# Default values for promitor-agent-resource-discovery.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Allow to enable deploy promitor-agent-resource-discovery.
# Type: boolean
# Mandatory: no
# Default: false
#
install: false

# Replicas spec configuration for promitor-agent-resource-discovery.
# Type: int
# Mandatory: no
# Default: 1
#
replicas: 1

# Name of promitor-agent-resource-discovery which use in deployment and other objects names.
# Type: string
# Mandatory: no
# Default: promitor-agent-resource-discovery
#
name: promitor-agent-resource-discovery

# Image of promitor-agent-resource-discovery.
# Type: string
# Mandatory: yes
#
# image: containers.promitor.io/tomkerkhove/promitor-agent-resource-discovery

# Image pull policy to use for promitor-agent-resource-discovery deployment.
# Type: string
# Mandatory: no
# Default: IfNotPresent
#
imagePullPolicy: IfNotPresent

## Reference to one or more secrets to be used when pulling images
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
#
imagePullSecrets: []

azureAuthentication:
  # Authentication type to use to authenticate.
  # Options are ServicePrincipal (default), UserAssignedManagedIdentity or SystemAssignedManagedIdentity.
  # Type: string
  # Mandatory: no
  # Default: ServicePrincipal
  #
  mode: "ServicePrincipal"
  identity:
    # Id of the Azure AD entity to authenticate with.
    # Type: string
    # Mandatory: yes
    # Default: not set
    #
    id: ""
    # Secret of the Azure AD entity to authenticate with.
    # Sets the environment variable PROMITOR_AUTH_APPKEY through the secrets.appKeySecret field in the Secret.
    # Type: string
    # Mandatory: yes
    # Default: not set
    #
    key: ""
    # Aad Pod Identity name, when using UserAssignedManagedIdentity or SystemAssignedManagedIdentity as mode.
    # Type: string
    # Mandatory: no
    # Default: not set
    #
    binding: ""

## Metric Declaration YAML
azureLandscape:
  cloud: Global
  tenantId: ""
  subscriptions: []


resourceDiscoveryGroups: []
# Sample resource discovery group configuration below
# - name: logic-apps-landscape
#   type: LogicApp
#   criteria: <-- Optional, can have one or more of the criterias below
#     include:
#       subscriptionIds:
#       - SUBSCRIPTON-ID-ABC
#       - SUBSCRIPTON-ID-GHI
#       resourceGroups:
#       - promitor-resource-group-1
#       - promitor-resource-group-2
#       tags:
#         app: promitor
#         region: europe
#       regions:
#       - northeurope
#       - westeurope

cache:
  enabled: true
  durationInMinutes: 5

telemetry:
  defaultLogLevel: "Error"
  applicationInsights:
    enabled: false
    key: ""
    logLevel: ""
  containerLogs:
    enabled: true
    logLevel: ""

## securityContext and containerSecurityContext are using secure defaults.
## Only override if you have a good reason to.
# securityContext:
#   runAsUser: 10000
#   runAsGroup: 10000
#   runAsNonRoot: true
#   seccompProfile:
#     type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  enabled: true
  privileged: false
  readOnlyRootFilesystem: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created.
  # Type: boolean
  # Mandatory: no
  # Default: true
  #
  install: true

  # The name of the ServiceAccount to use.
  # Type: string
  # Mandatory: no
  # Default: promitor-agent-resource-discovery
  #
  name: promitor-agent-resource-discovery

  # Will add the provided map to the annotations for the created serviceAccount.
  # Type: map[string]string
  # Mandatory: no
  # Default: not set
  #
  annotations: {}

  # Will add the provided map to the labels for the created serviceAccount.
  # Type: map[string]string
  # Mandatory: no
  # Default: not set
  #
  labels: {}

  ## Set this to true if you plan on using Pod Security Policy
  automountServiceAccountToken: false

# Service configuration for promitor-agent-resource-discovery
# Type: object
# Mandatory: no
#
service:
  # Type of promitor-agent-resource-discovery service.
  # Type: string
  # Mandatory: no
  # Default: ClusterIP
  #
  type: ClusterIP

  # Port of promitor-agent-resource-discovery which use in service.
  # Type: int
  # Mandatory: no
  # Default: 8889
  #
  port: 8889

  # Target port of promitor-agent-resource-discovery which use in service and container.
  # Type: int
  # Mandatory: no
  # Default: 5000
  #
  targetPort: 5000

  # Labels set which will create in service.
  # Type: map[string]string
  # Mandatory: no
  # Default: {}
  #
  labels: {}

  # That configuration will work only if service.type: LoadBalancer.
  # These settings are specific to Azure Kubernetes Service.
  azureLoadBalancer:
    # Prefix for DNS name to expose the service on using <name>.<location>.cloudapp.azure.com format.
    # Azure Kubernetes Service only.
    # Type: string
    # Mandatory: no
    # Default: not set
    #
    dnsPrefix:
    # To restrict access to Promitor by exposing it through an internal load balancer.
    # This setting is specific to Azure Kubernetes Service.
    # Type: boolean
    # Mandatory: no
    # Default: false
    #
    exposeInternally: false

secrets:
  # To use your own secret, set createSecret to false and define the name/keys that your secret uses.
  # Indication if you want to bring your own secret level of logging.
  # Type: boolean
  # Mandatory: no
  # Default: true
  #
  createSecret: true
  # Name of the secret for Azure AD identity secret.
  # Type: string
  # Mandatory: no
  # Default: promitor-agent-resource-discovery
  #
  secretName: promitor-agent-resource-discovery
  # Name of the field for Azure AD identity secret in the Secret resource.
  # Type: string
  # Mandatory: no
  # Default: azure-app-key
  #
  appKeySecret: azure-app-key
  extra: { }
  # azure-storage-queue-sas-token: <value>

serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping.
  # Type: boolean
  # Mandatory: no
  # Default: true
  #
  enabled: true

  # Set how frequently Prometheus should scrape.
  # Type: string
  # Mandatory: no
  # Default: 5m
  #
  interval: 5m

  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator.
  # Type: map[string]string
  # Mandatory: no
  #
  labels:
    app.kubernetes.io/component: monitoring

  # Set timeout for scrape
  # timeout: 10s

  # Set relabelings for the ServiceMonitor, use to apply to samples before scraping
  # relabelings: []

  # Set metricRelabelings for the ServiceMonitor, use to apply to samples for ingestion
  # metricRelabelings: []
  #
  # Example - note the Kubernetes convention of camelCase instead of Prometheus' snake_case
  # metricRelabelings:
  #   - sourceLabels: [dbinstance_identifier]
  #     action: replace
  #     replacement: mydbname
  #     targetLabel: dbname

# The resources describes the compute resource requests and limits for single Pods.
# Ref: https://kubernetes.io/docs/user-guide/compute-resources/
# Type: object
# Mandatory: no
#
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   limits:
#     cpu: 200m
#     memory: 256Mi
#   requests:
#     cpu: 200m
#     memory: 256Mi

# Allow defines which Nodes the Pods are scheduled on.
# Type: map[string]
# Mandatory: no
# Default: not set
nodeSelector: []

# Tolerations allow the pods to schedule onto nodes with matching taints.
# Type: object
# Mandatory: no
tolerations: []

# If specified, the pod's scheduling constraints
# More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#affinity-v1-core
# Type: object
# Mandatory: no
# Default: not set
affinity: {}

# Annotations is an unstructured key value map stored
# with a resource that may be set by external tools to store and retrieve arbitrary metadata.
# They are not queryable and should be preserved when modifying objects.
# More info: https://kubernetes.io/docs/user-guide/annotations
# Type: map[string]string
# Mandatory: no
# Default: not set
#
annotations: {}
#  annotation-key: annotation-value

# Map of string keys and values that can be used to organize and categorize (scope and select) objects.
# May match selectors of replication controllers and services.
# More info: https://kubernetes.io/docs/user-guide/labels
# Type: map[string]string
# Mandatory: no
# Default: not set
#
labels: {}
#  label-key: label-value

## Pass extra volumeMounts to the promitor-agent-resource-discovery container
extraVolumeMounts: []
  # - name: secrets-store-inline
  #   mountPath: "/mnt/promitor-secrets"
  #   readOnly: true

## Pass extra volumes to the promitor-agent-resource-discovery deployment
extraVolumes: []
  # - name: secrets-store-inline
  #   csi:
  #       driver: secrets-store.csi.k8s.io
  #       readOnly: true
  #       volumeAttributes:
  #         secretProviderClass: "promitor-secrets"

# PriorityClassName assigned to the Pods to prevent them from evicting.
# Type: string
# priorityClassName: "priorityClassName"